// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductType {
  HAMBURGUER
  DRINK
  DESSERT
  SIDEDISHE
}

model Product {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String      @db.VarChar(50)
  description String      @db.VarChar(255)
  price       Int
  productType ProductType
  discount    Int         @default(0)
  isAvaiable  Boolean     @default(true)
  selledTimes Int         @default(0)
  image       String?
  itens       Item[]

  @@map("products")
}

model Extra {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  name        String      @db.VarChar(50)
  description String      @db.VarChar(255)
  price       Int
  productType ProductType
  discount    Int         @default(0)
  isAvaiable  Boolean     @default(true)
  image       String?
  itens       Item[]

  @@map("extras")
}

enum OrderStatus {
  CANCELED
  PROCESSING
  READY
}

enum PaidWith {
  CREDITCARD
  DEBITCARD
  CASH
}

model Order {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  clientName    String          @db.VarChar(50)
  discount      Int             @default(0)
  orderStatus   OrderStatus     @default(PROCESSING)
  ItensOnOrders ItensOnOrders[]

  @@map("orders")
}

model Item {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  note          String?         @db.VarChar(255)
  product       Product         @relation(fields: [productId], references: [id])
  productId     Int
  extras        Extra[]
  ItensOnOrders ItensOnOrders[]

  @@map("itens")
}

model ItensOnOrders {
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  paidPrice Int

  @@id([orderId, itemId])
}
